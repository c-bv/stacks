name: CI

on:
    push:
        branches: ['main']

env:
    REPO_NAME: ${{ github.event.repository.name }}

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Deploy to server
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  script: |
                      set -e

                      REPO_DIR="/opt/${{ env.REPO_NAME }}"

                      cd $REPO_DIR
                      git pull

                      echo "${{ secrets.TRAEFIK_DOTENV }}" > $REPO_DIR/traefik/.env
                      echo "${{ secrets.WHOAMI_DOTENV }}" > $REPO_DIR/whoami/.env
                      echo "${{ secrets.MAILSERVER_DOTENV }}" > $REPO_DIR/mailserver/.env
                      echo "${{ secrets.VAULTWARDEN_DOTENV }}" > $REPO_DIR/vaultwarden/.env
                      echo "${{ secrets.DOCKGE_DOTENV }}" > $REPO_DIR/dockge/.env
                      echo "${{ secrets.UPTIME_KUMA_DOTENV }}" > $REPO_DIR/uptime-kuma/.env
                      echo "${{ secrets.WIREGUARD_DOTENV }}" > $REPO_DIR/wireguard/.env

                      CHANGED_DIRS=$(git diff --name-only ${{ github.sha }} ${{ github.event.before }} | grep -Ev "^(.github|scripts|logs)/" | xargs -I {} dirname {} | sort -u)
                      echo "Changed directories: $CHANGED_DIRS"

                      if [ -z "$CHANGED_DIRS" ]; then
                      echo "No changes in deployment-related directories."
                      exit 0
                      fi

                      for DIR in $CHANGED_DIRS
                      do
                      if [ -d "$REPO_DIR/$DIR" ]; then
                          echo "Deploying ${DIR}..."
                          cd $REPO_DIR/$DIR
                          docker compose up -d --force-recreate
                          cd $REPO_DIR
                      else
                          echo "Directory ${DIR} does not exist in the repository."
                      fi
                      done
